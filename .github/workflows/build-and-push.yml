# Modified from: https://github.com/oats-center/isoblue/blob/master/.github/workflows/build-and-push-services.yml
name: Build and Push Pong Containers

on:
  push:
  pull_request:

env:
  REGISTRY: ghcr.io
  ORG: aaron97neu
  CONTAINER_DIR: src

jobs:
  build-and-push-services:
    strategy:
      matrix:
        service:
          - ai-paddle-control
          - audio-engine
          - clocktower-visualizer
          - game-engine
          - gameboard
          - human-paddle-control
          - human-visualizer
          - neural-net-visualizer
          
    runs-on: ubuntu-latest
   
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.7.1
        with:
          version: latest

      - name: Builder instance name
        run: echo ${{ steps.buildx.outputs.name }}

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Cache docker layers
        if: ${{ !env.ACT }}  # Awaiting ACT version after 0.2.17 for this feature
        uses: actions/cache@v4.1.2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.service }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.service }}
            ${{ runner.os }}-buildx-

      - name: Prepare
        id: prepare
        run: |
          echo 'Processing git ref:' $GITHUB_REF

          DOCKER_IMAGE=${{ env.REGISTRY }}/${{ env.ORG }}/${{ matrix.service }}

          # Release version is just the release number
          if [[ $GITHUB_REF == refs/heads/release/* ]]; then
              VERSION=${GITHUB_REF#refs/heads/release/}
              RELEASE=true

          # Branch version is branch name (with '/' -> '-')
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')

            # Expect for the default_branch, which gets version "next"
            if [ "$VERSION" == "${{ github.event.repository.default_branch }}" ]; then
              VERSION=next
            fi

          # PR versions are pr-<github pr number>
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}

          else
            echo ::error ::Can not determine version of service -- unexpected job trigger? Stopping.
            exit 1
          fi

          TAGS="${DOCKER_IMAGE}:${VERSION}"

          if [[ $RELEASE ]]; then
            if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
              MINOR=${VERSION%.*}
              MAJOR=${MINOR%.*}
              TAGS="$TAGS,${DOCKER_IMAGE}:${MAJOR},${DOCKER_IMAGE}:${MINOR},${DOCKER_IMAGE}:latest"
            else
              echo ::error ::Version does not follow semantic versioning. Stopping.
              exit 1
            fi
          fi

          if [ "${{ github.event_name }}" = "push" ]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
          fi

          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          echo "created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

          echo ${{ github.event.repository.license }}

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/bake-action@v5
        with:
          files: docker-compose.yml # Provides context
          push: ${{ github.event_name != 'pull_request' }}
          targets: ${{ matrix.service }}
          set: |
            ${{ matrix.service }}.tags=${{ steps.prepare.outputs.tags }}
            ${{ matrix.service }}.cache-from=type=local,src=/tmp/.buildx-cache
            ${{ matrix.service }}.cache-to=type=local,dest=/tmp/.buildx-cache
            ${{ matrix.service }}.labels=org.opencontainers.image.title=${{ matrix.service }}
            ${{ matrix.service }}.labels=org.opencontainers.image.description=An Container for Discovery World's Pong Exhibit
            ${{ matrix.service }}.labels=org.opencontainers.image.url=${{ github.event.repository.html_url }}
            ${{ matrix.service }}.labels=org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            ${{ matrix.service }}.labels=org.opencontainers.image.version=${{ steps.prepare.outputs.version }}
            ${{ matrix.service }}.labels=org.opencontainers.image.created=${{ steps.prepare.outputs.created }}
            ${{ matrix.service }}.labels=org.opencontainers.image.revision=${{ github.sha }}
            ${{ matrix.service }}.labels=org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
