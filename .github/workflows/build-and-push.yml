# Modified from: https://github.com/oats-center/isoblue/blob/master/.github/workflows/build-and-push-services.yml
name: Build and Push Pong Containers

on:
  push:
  pull_request:

env:
  REGISTRY: ghcr.io
  ORG: aaron97neu
  CONTAINER_DIR: modules

jobs:
  build-and-push-services:
    strategy:
      matrix:
        module:
          - ai-paddle-control
          - tyler
          - gameboard
          - human-paddle-control
          - human-visualizer
          - neural-net-visualizer
          - single-screen-development
          - log-server
          - top-web-paddle-control
          - bottom-web-paddle-control
          
    runs-on: ubuntu-24.04
   
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.7.1
        with:
          version: latest

      - name: Builder instance name
        run: echo ${{ steps.buildx.outputs.name }}

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # This likely could have been done inline in the next step but those steps
      # are aleady messy enough
      - name: Validate Release Version
        id: release-ver
        if: startsWith(github.ref, format('refs/heads/{0}', 'release'))
        run: |
          VERSION=${GITHUB_REF#refs/heads/release/}
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
              echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"
          else
            echo ::error ::Version does not follow semantic versioning. Stopping.
            exit 1
          fi

      - name: Setup Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=false
          bake-target:
            ${{ matrix.module }}
          images: |
            ${{ env.REGISTRY }}/${{ env.ORG }}/${{ matrix.module }}
          tags: |
            type=sha
            type=semver,pattern={{version}},value=${{ steps.release-ver.outputs.VERSION }},enable=${{ startsWith(github.ref, format('refs/heads/{0}', 'release')) }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.release-ver.outputs.VERSION }},enable=${{ startsWith(github.ref, format('refs/heads/{0}', 'release')) }}
            type=semver,pattern={{major}},value=${{ steps.release-ver.outputs.VERSION }},enable=${{ startsWith(github.ref, format('refs/heads/{0}', 'release')) }}
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=next,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.title=${{ matrix.module }}

      - name: Print out bake files for debugging
        run: |
          echo Bake File:
          cat ${{ steps.meta.outputs.bake-file }}
          echo -e "\nBake File Annotations:"
          cat ${{ steps.meta.outputs.bake-file-annotations }}
          echo -e "\nBake File tags:"
          cat ${{ steps.meta.outputs.bake-file-tags }}

      - name: Build and push
        uses: docker/bake-action@v5
        with:
          files: |
            docker-compose.yml
            ${{ steps.meta.outputs.bake-file }}
          push: ${{ github.event_name != 'pull_request' }}
          targets: ${{ matrix.module }}
          set: |
            ${{ matrix.module }}.cache-from=type=gha
            ${{ matrix.module }}.cache-to=type=gha,mode=max
